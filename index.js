//Tanƒ±mlarƒ± yapalƒ±m
const Discord = require('discord.js');
const client = new Discord.Client({ intents: 32767, partials: ['CHANNEL'] }); // 32767 = B√ºt√ºn intentler (partials √∂zelliƒüini √∂zel mesajlarƒ± okumak i√ßin kullanacaƒüƒ±z).
const fs = require('fs');
const moment = require("moment");
moment.locale('tr')
const ascii = require("ascii-table");
const config = require('./config.json');
require('./Events/eventLoader.js')(client);

//-------------------- Ayarlar konsolu --------------------//

const Panel = {
  //Hepsi sadece "true" veya "false" olabilir.
  "Show_Bot_DM": true, //Bu deƒüer "true" olursa bota √∂zel mesaj geldiƒüinde "Log_Channel" deƒüerindeki ID numarasƒ±na mesaj gelir.
  "Show_Guild_Log": false, //Bu deƒüer "true" olursa bot sunucuya eklendiƒüinde "Log_Channel" deƒüerindeki ID numarasƒ±na mesaj gelir.
  "Reload_Comamnds": true, //Bu deƒüer "true" olursa komutlarda deƒüi≈üiklik yapƒ±ldƒ±ƒüƒ±nda yeniden y√ºkler. (Bu mod aktifken bir hata √ßƒ±karƒ±p 8 saniye i√ßerisinde √ß√∂zemezsen sistem √ß√∂ker.)
  "Meditation_Mode": false, //Bu deƒüer "true" olursa Bot mesajlarƒ± cevaplamaz.
  "Log_Channel": "CONSOLE" //"Show_Bot_Dm", "Show_Guild_Log" vs. √∂zelliklerin hangi Discord kanalƒ±na kayƒ±t edileceƒüini se√ßmek i√ßin kanal ID numarasƒ±nƒ± yazƒ±nƒ±z. Eƒüer mesajlarƒ±nƒ±zƒ±n konsola gelmesini istiyorsanƒ±z "CONSOLE" yazƒ±n.
}
module.exports = Panel;

//-------------------- Etiket = √ñn ek --------------------//

client.on("messageCreate", message => { //Client on ile ‚ÄúmessageCreate‚Äù olayƒ±na bir dinleyici koyalƒ±m. 

  if (message.guild) {
    let Prefix = config.Bot.Prefix; //Botun √∂n eki
    let replacedPrefix = `\\${config.Bot.Prefix.split('')}`.replace(/,/g, '\\') //Yine botun √∂n eki ama aralarƒ±nda ‚Äú\‚Äù var

    if (!message.mentions.members.first()) { return }; //Eƒüer mesaj i√ßinde bahsetme yoksa dur.
    if (message.author.bot) { return }; //Eƒüer bahseden ki≈üi bot ise dur.

    if (message.mentions.members.first().id === client.user.id) { //Eƒüer bahsedilen ki≈üi bot prefixi g√∂nder.
      const embed = new Discord.MessageEmbed()
        .setDescription(`üëã Selam, ben **${client.user.username}**! √ñn ekim **${replacedPrefix}** olarak ayarlƒ±dƒ±r.`)
        .setFooter(`${Prefix}yardƒ±m yazarak yardƒ±m men√ºme bakabilirsiniz.`)
        .setColor(config.Bot.EmbedColor)
      message.channel.send({ embeds: [embed] })
    }
  }
//-------------------- √ñzel Mesaj Kayƒ±tƒ± --------------------//

  if (Panel.Show_Bot_DM === true) {
    if (!message.guild) {
      const embed = new Discord.MessageEmbed()
      embed.setTitle(`üíå ${message.author.tag} tarafƒ±ndan bir √∂zel mesaj`)
      embed.setDescription(`"${message.content}"`)
      embed.setThumbnail(message.author.displayAvatarURL({ dynamic: true }))
      embed.setColor(config.Bot.EmbedColor)
      if (message.attachments.size > 0) {
        embed.setImage(message.attachments.first().url)
      }
      if (Panel.Log_Channel === "CONSOLE") {
        console.log(`${embed.title} tarafƒ±ndan bir √∂zel mesaj!\n${embed.description}`)
        return;
      }
      client.channels.cache.get(Panel.Log_Channel).send({ embeds: [embed] });
    }
  }

//-------------------- Meditasyon Modu --------------------//

  if (Panel.Meditation_Mode === true) {
    message.react('üò¥')
    return;
  }
});

//-------------------- Sunucu Giri≈ü-√áƒ±kƒ±≈ü Kayƒ±tƒ± --------------------//

if (Panel.Show_Guild_Log === true) {
  client.on("guildCreate", async guild => {
    var GuildOwner = await client.users.fetch(guild.ownerId)
    const embed = new Discord.MessageEmbed()
      .setTitle(guild.name)
      .setDescription(`
**Yeni bir sunucuya eklendim! ü•≥**
------------------------------------
Sunucu Ya≈üƒ±: ${moment(guild.createdTimestamp).fromNow()}
Sunucu Sahibi: ${GuildOwner.tag}
------------------------------------
Kullanƒ±cƒ± Sayƒ±sƒ±: ${guild.members.cache.filter(member => !member.user.bot).size}
Bot Sayƒ±sƒ±: ${guild.members.cache.filter(member => member.user.bot).size}
Kanal Sayƒ±sƒ±: ${guild.channels.cache.filter(channel => channel.type === 'text').size}
------------------------------------`)
      .setColor(config.Bot.EmbedColor)
      .setFooter(guild.id)
      .setThumbnail(guild.iconURL({ dynamic: true }))
    if (Panel.Log_Channel === "CONSOLE") {
      console.log(`${embed.title}\n${embed.description}`)
      return;
    }
    client.channels.cache.get(Pane.Log_Channel).send({ embeds: [embed] })
  });

  client.on("guildDelete", async guild => {
    var GuildOwner = await client.users.fetch(guild.ownerId)
    const embed = new Discord.MessageEmbed()
      .setTitle(guild.name)
      .setDescription(`
**Bir sunucudan √ßƒ±karƒ±ldƒ±m... ü•∫**
------------------------------------
Sunucu Ya≈üƒ±: ${moment(guild.createdTimestamp).fromNow()}
Sunucu Sahibi: ${GuildOwner}
------------------------------------`)
      .setColor(config.Bot.EmbedColor)
      .setFooter(guild.id)
      .setThumbnail(guild.iconURL({ dynamic: true }))
    if (Panel.Log_Channel === "CONSOLE") {
      console.log(`${embed.title}\n${embed.description}`)
      return;
    }
    client.channels.cache.get(Panel.Log_Channel).send({ embeds: [embed] });
  });
}

//-------------------- Komutlar klas√∂r√ºn√º y√ºkle --------------------//

client.commands = new Discord.Collection();
client.Aliases = new Discord.Collection();
fs.readdir(`./Commands/`, (err, folders) => {
  folders.forEach(function (module) {
    var Table = new ascii("Komutlar");
    fs.readdir(`./Commands/${module}/`, (err, files) => {
      if (err) console.error(err)
      Table.setHeading(`(${files.length}) ${module}`, "Durum");
      files.forEach(function (file) {
        let props = require(`./Commands/${module}/${file}`);
        if (!file.endsWith(".js")) return;
        if (!props.help || !props.help.Name) {
          Table.addRow(props, `Hata ("Name" deƒüeri ayarlanmadƒ±)`);
        } else {
          Table.addRow(props.help.Name, "Hazƒ±r")
          client.commands.set(props.help.Name, props);
          props.conf.Aliases.forEach(alias => {
            client.Aliases.set(alias, props.help.Name)
          })
        }
      });
      console.log("\x1b[1m", "\x1b[36m", Table.toString(), "\x1b[0m");
    });
  });
});

//-------------------- Komutlar Klas√∂r√ºn√º Yeniden Y√ºkle --------------------//

if (Panel.Reload_Comamnds === true) {
  var interval = setInterval(async function () {
    fs.readdir(`./Commands/`, (err, folders) => {
      folders.forEach(function (module) {
        fs.readdir(`./Commands/${module}/`, (err, files) => {
          files.forEach(function (file) {
            let props = require(`./Commands/${module}/${file}`);
            if (!file.endsWith(".js")) return;
            delete require.cache[require.resolve(`./Commands/${module}/${file}`)];
            client.commands.delete(props.help.Name, props)
            client.commands.set(props.help.Name, props);
            props.conf.Aliases.forEach(alias => {
              client.Aliases.set(alias, props.help.Name)
            })
          });
        });
      });
    });
  }, 8000)
}

client.login(config.Bot.TOKEN) //Botuna token ile giri≈ü yap
